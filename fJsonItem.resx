<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>