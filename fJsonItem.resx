<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>