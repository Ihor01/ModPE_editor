<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAuLSURBVHhe7Z1bbBTnFceNSVsXqYgNVFVVtVWVSm1fUtKE
        9oVqvbuGOFW4BjeAKkVpSaQCTYGUWwSlogHfDQ432xhT7LRQUCUezB2bm6qIFiyMLziKxEMLpARswMYY
        c/HXcz7mG8+Mz653dse7szvnSD/xMntm9vx/c9s4MxlcXFxcXFxcXFxcXFwRa1ROTs6PgsHgNOBXdskJ
        BFZlZ2fvYMIDc1ppnZsiEAjM8/v947QsEld5eXmjYQN+EwoGPwMEk1xyJ0/+uhbNyBcaF8rOPk5tCJMc
        YGdsSYgEsOd/GcI/q1b8sxkLxLcX/UP4Vl8SY9d02GLCH/6pf4GNGzaIjitXks4VpL1dp72tTbQhra2i
        taVF0nL5smTBggX69sfDofp6cf78+SGsWbNGX2b88k+GzG/cB5dFIOdVfZmESAArWadW+P0FlWJUyYDI
        KBExkbX+c33jDxw4IAYGBpLO06dPxZMnTySPHz8Wj5BHj0Q/0t8vHj58KPqQvj6xePFiffvjobm5Wdy6
        fXsINbt368t85cMvyBlmFj0SP577gb7ciEqQm5s7Fg7/vbiiiW+uFBnFsYePuE0AGb4mAIYvBQgT/gOX
        CIBYJYALw8sjIgFecaqV+FY3kRtjBzcJgOGrvT9c+FIALfwHDx64RgAkIRLA4WWjWkFmcb/IKIWVx0HW
        n90hQLjwpQAYvtr7DeH3JlqADSAAMUMjmcUjLEEoENgpG095jdwAu7hBAFP46rwfJnwpgBZ+b2+vWOQy
        ARBKAjhtT9AijK9AgGpsmj3lF+TK7ZJsAYzhq72fDF/t/Ybw76MAixbp2x8PTgqAjJgE6SQAGb4mAIav
        zvvhwr9//75rBUBQgolzV+ufd0QCkwBlsKI4yfowuQJEHb4SwBB+TzIEIGYYicwSswQhv785LgnSRQBr
        +OrQH+52jwq/p6fH9QIgjkqQDgLI8DUBwoUvBTCGD1jD704RAZDMkv4hEoRCofFarNFXqgtgPO+T4au9
        3xK+3Pst4d/r7k4ZARCrBHBLX6TFGn2ZBNgEjeMka0PiBDCFrwmA4avzfsTwAWP43RB+wgXYCAIQM7RD
        Zmn/4HoDgQot1ugrVQWIOnwlQBTh3713L+UEQPT/eOQVAYzhq0O/8Yp/uPDVod8aPrLQ0wJshoZxkrUx
        MQKEC18KYAwfGC78e1r4d+7eTawA+SAAMUO7eEoAa/jq0G/ndk+GD1jDlwIsXKhvfzywAIDTAsjwNQGi
        Dh8whm+84reG33XnDgsQLyMlgPG8T4avBLCEL/d+KnxAnvcN4bMA5dAwTrLynRfAFL4mAIavzvtOhd/Z
        1ZVYAQpAAGKGdklrAaIOXwlgDB8whm+64tfCv2MInwUgmtvFSQGM4atDv53w5d5Pha/O+5bwb3d2elyA
        j6BhnGQVOCPAU8QavjrvQ/BSgOHCB4zhmy76iPCR3yZSgEIQgJihXdJTADvhKwGiDR+Q531L+BgQCxAn
        TghgDV8d+u3c6w93u0eFjzj1N4GtbW2m4BUswDDI8DUBwoUvBTCGDwwXPnXFbw0fOdnQIN595x3x67ff
        jpmSkhLxxa1bpr4KdwuwBRrGSVZh7AJg+GrvJ8NXe78lfLn3U+ED4cLvJMJPBCYBikAAYoZ2SQsBTOFr
        AmD46rwfMXzAGD51u2cKX9v7qYBGGhaAwBi+2vvJ8JUA0YYPyPO+S8JHWAALZPjq0A/Bq/O+ndu94cJn
        AQxlEmArNIyTWASIOnwlQITwqSt+t4SP1NTUDApQDAIQM7SLqwT4Utk9/QvuBtup0BXW8NWhPxG3e8ni
        o/JyfT7Pbe4lZ2gXVwmA/HT2u3KD5s+bJy/CwoavCRAufCmAMXxguPCjvd1LBlevXhV5c+bI2Ux6YyE5
        u1hwToBt0NABJqz95NkGAfiF0fqaXbt0dlVX61Tv3KmzE6mq0qmqrNSpRCoqJBXIjh2SHYrt2yXbkW3b
        JNuQrVslW5NMUWGhmD1rlj6X5//4b3J2seA6AZDvvrdX/7KMme8sOUDOLFZcKQDy/LqL4uVf/l4EQzlD
        huA1cAY/eXOp8K1rImcVD64VQDFqy2MxuvyBpxm19Qk5GydwToDt0JBJOVgAj8MCeBwWwOM4I8BUEGAH
        NGRSDhbA47AAHsc5ASqgIZNysAAehwXwOCyAx3FOgEpoyKQcLIDHYQE8DgvgcZwToAoaMilHUgUYU/pf
        MX79vxgHGFN2jZzxcCRNgK+WXRfBnKnPVs7ETQBmmbX5JjnrSDgnwE5oaAPfhktDvgQTH99Y00DOOhKu
        EAD/9PvChQtMDGwqK9PnOC6/hZx1JFwhwLlz58j/AYQZntOnT7MAXsY9AlRDQxv4NrIATjBEAGLWkWAB
        UhwWwOO4R4Bd0NAGvnyzAOphD4w9TAIUgADErCPBAqQ4aSHA2bNn9Yc9ULS0tIiDBw96ktbWVnImilOn
        TqW3AKcNX9Cr4BGSmg3iHgFqoKENohWgsKBAX86r4MMjqdkgJgEKQQBi1pFwhQBnzpzRH/Vi5eTJk/py
        XgXP89RskMbGRn25tBQAabp4Uezfv9+TXLp0iZyJIm0EwIc8MfZxjwC7oaENfAUsgBOYBCgCAYhZR8IV
        ApwGAeQj3hjbNKSFAHCRo57uydijoaHBJQL8BRrawFfIAjjBEAGIWUfCFQLgvax6uicFPrL1044OT4IP
        rKZmojDeJqelAPgz8PRp0/RlvcbMGTNEe3s7ORskbQSQD3YmwMekquW8SmlpKTkbxD0C7IGGNvAVWQTo
        6yOpq6vTl/Mq+/btI2eDmAQoBgGIWUfC9QLgU7337Nkj1q5d60nqamvlE86p2SBpIUAjCCAf687Y5kRa
        CNDYKJ/pz9jnxIkTLhGgFhrawCgA/pol3+XD2Oa4UYASEICYdSTcIUBDg3ydC2Of48ePp74A+MZN+ToX
        xjbuEaAOGtrAV8wCOIFJgFIQgJh1JNwhAFzJ4q0OxbVr18TSJUvkL2Je5P1ly8SN69fJ2SBpI4B8kxdB
        ueFVaV4FXxxFzQY5ljYC9PSQGN+V51XwDWbUbJBjx47pyyVXgI+hoQ18JYMC4I8Z8g2eBHgKWL58uXhj
        9mxPsmLFCnH9xg1yNshRqwDErCMRmOJyAZjIpIUA+GOGfIMnY5ujR4+yAF7GPQL8FRrawFdqEACuZPH9
        vYx9TAKUgQDErCPhGgHUe/sZexxhAbyNewT4GzS0gVEA/DFDvbffCr46Hd/4vWrVKk9SVVUlZ0DNBjl8
        5MigAJtAAGLWkXC9APjKeLWcV9lTW0vOBkkPAeBeFv/8mSI/P19fzqsUFRWRs0EOHz6sL5eyAuCPGV3w
        ZSiamprEjOnT9WW9xqyZM0VzczM5G8Q9AuyFhjbwlUUnAPK/mzflo1K8CH53aiYKkwCbQQBi1pFwhwBw
        JdvZ1cXEwCEWwNu4R4B90NAGvk2DAuC97O3OTiYG6g8dMgtAzDoSLECKwwJ4nGQLUIEfxteVZOwdIFcQ
        DqMA+GMG/trF2Ke+vj5mAUbtGxDBYOjZ57Ozt2ixRl/BYHClWnlW9eci4+/QOEp8m1kAJzAJUA4CELMO
        x5jK/+ifhSyXaLFGX/ChF1WD762oJVcSDhbAGeIR4IX3q/XPTvX7f6jFaq9AgpPYIHvqa+Jr2z4jV0TB
        AjhDrAKM3doxeP4PBg9pcdqvQCDwg59PnnwfG/lzp4lvrj8iMvc+JldqhAVwBrsCYDbf+lO9yM59XX2u
        GzJ8QYsztgqFQrnQqE9tiP/V18XL898TL721Qkx8ayXJpLkL9Q1Hli5bxsSAcYaT5i0iZ41gFq/M/50x
        eOQBZJejxRhf5fj9r4T8/jZDc8bFwF5/GcJ/SYvPmfL7/c/BNcEcaP4x0AQr6ggHLPsp/NsD//Yz8QOz
        7IZ/cabkvCV+/0W4da/LCQRm5+XljdZi4+Li4uLi4uLi4uLiMlVGxv8BsH92CNJYde8AAAAASUVORK5C
        YII=
</value>
  </data>
</root>