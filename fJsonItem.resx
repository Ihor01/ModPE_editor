<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>